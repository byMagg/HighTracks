name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build-front:
    runs-on: ubuntu-latest
    container: node:16-alpine
    defaults:
      run:
        working-directory: app
    steps:
      - name: Install git and rsync ðŸ“š
        run: |
          apk update && apk add git rsync
        working-directory: ../
      - name: Configure git to trust the workspace despite the different owner
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory /__w/bymagg.github.io/github-pages-deploy-action-temp-deployment-folder
        working-directory: ../
      - uses: actions/checkout@v2
      - name: Install Ionic
        run: npm install -g @ionic/cli
      - name: Install dependencies
        run: npm install
      - name: Build Ionic project
        run: |
          ionic build --prod -- --base-href http://hightracks.me/
          cd www
          cp index.html 404.html
      - uses: actions/upload-artifact@v3
        with:
          name: www
          path: www/
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        if: contains(github.ref,'refs/heads/master')
        with:
          branch: gh-pages
          folder: app/www
          clean: true
  build-back:
    runs-on: ubuntu-latest
    container: node:16-alpine
    defaults:
        run:
          working-directory: api
    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Test
        run: npm run test-jenkins
  build-and-push-to-gcr-service-account:
    name: Build & push - with service account
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.B64_GCLOUD_SERVICE_ACCOUNT_JSON }}'
      - name: Building and pushing the image
        working-directory: api
        run: |
          cat ${{ secrets.B64_GCLOUD_SERVICE_ACCOUNT_JSON }} > gcloud-service-account.json
          docker login -u _json_key --password-stdin https://gcr.io < gcloud-service-account.json
          docker build -t gcr.io/${{ vars.GCLOUD_PROJECT_ID }}/hightracks-api:${{ github.sha }} .
          docker push gcr.io/${{ vars.GCLOUD_PROJECT_ID }}/hightracks-api:${{ github.sha }}
  deploy-back:
    needs: [build-back]
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'un-valor-para-que-no-de-error'
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy
        run: |
            ssh ubuntu@${{ secrets.SSH_HOST }} "if [ ! -d 'HighTracks' ]; then \
                git clone https://github.com/byMagg/HighTracks.git; \
              else \
                cd HighTracks/api && git stash && git fetch --all && git reset --hard origin/master && git pull origin master; \
              fi"
            ssh ubuntu@${{ secrets.SSH_HOST }} "if pgrep node; then forever stopall; fi"
            ssh ubuntu@${{ secrets.SSH_HOST }} "cd HighTracks/api && npm install"
            ssh ubuntu@${{ secrets.SSH_HOST }} "cd HighTracks/api && echo -e 'CLIENT_ID=${{ secrets.CLIENT_ID }}\nCLIENT_SECRET=${{ secrets.CLIENT_SECRET }}' > .env"
            ssh ubuntu@${{ secrets.SSH_HOST }} "cd HighTracks/api && forever start src/main.js"